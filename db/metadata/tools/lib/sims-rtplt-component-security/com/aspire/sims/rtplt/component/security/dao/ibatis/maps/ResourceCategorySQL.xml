<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- The SQL in these maps files has purposely been typed with more verbosity than is actually required.
 For example, many of the selects could have just used SELECT * FROM... instead of listing all of the columns.
 This is to demonstrate that even complex SQL can be handled and coded and formatted the way SQL was meant
 to be (i.e. not a bunch of concatenated strings in a Java class). -->

<sqlMap namespace="SecResourceCategory">
	<typeAlias alias="SecResourceCategory" type="com.aspire.sims.rtplt.component.security.pojo.ResourceCategory"/>
	
	<resultMap id="SecResourceCategoryResult" class="SecResourceCategory">
		<result property="categoryId" column="CATEGORY_ID"/>   
		<result property="parentId" column="PARENT_ID"/>       
		<result property="categoryName" column="CATEGORY_NAME"/> 
		<result property="categoryDesc" column="CATEGORY_DESC"/> 
		<result property="metadataId" column="METADATA_ID"/>   
		<result property="categoryKey" column="CATEGORY_KEY"/>
		<result property="orderKey" column="ORDER_KEY" javaType="int" jdbcType="NUMERIC" nullValue="0"/>  
		<result property="domain" column="DOMAIN"/>
	</resultMap>
	
	<select id="secResourceCategory_getResourceCategoryId" resultClass="java.lang.Long" >
  		<![CDATA[
   		SELECT SEQ_SEC_RESOURCE_CATEGORY_ID.NEXTVAL FROM DUAL
   		]]>
  	</select> 
  	
	<insert id="secResourceCategory_insertResourceCategory" parameterClass="SecResourceCategory">
		<![CDATA[
		INSERT  INTO SEC_RESOURCE_CATEGORY (
		        CATEGORY_ID            ,
		        PARENT_ID              ,
		        CATEGORY_NAME          ,
		        CATEGORY_DESC          ,
		        METADATA_ID            ,
		        CATEGORY_KEY           ,
		        ORDER_KEY,
		        DOMAIN           )
		VALUES (#categoryId#		   ,
		        #parentId:VARCHAR#     ,
		        #categoryName:VARCHAR# ,
		        #categoryDesc:VARCHAR# ,
		        #metadataId:VARCHAR#   ,
		        #categoryKey:VARCHAR#  ,
		        #orderKey#,
		        #domain:VARCHAR# )
		]]>       
  	</insert>
  	
  	<select id="secResourceCategory_listResourceCategory" resultMap="SecResourceCategoryResult" parameterClass="SecResourceCategory">    
		<![CDATA[
		SELECT *
		FROM   SEC_RESOURCE_CATEGORY   
		]]>           
		<dynamic prepend="WHERE">  
            <isNotEmpty prepend="AND" property="categoryId">
                CATEGORY_ID = trim(#categoryId#)
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="parentId">
                PARENT_ID = trim(#parentId#)
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="categoryName">
                CATEGORY_NAME like '%'||trim(#categoryName#)||'%'    
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="categoryDesc">
                CATEGORY_DESC like '%'||trim(#categoryDesc#)||'%'    
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="metadataId">
                METADATA_ID = trim(#metadataId#)
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="categoryKey">
                CATEGORY_KEY = trim(#categoryKey#)
            </isNotEmpty>
             <isNotEmpty prepend="AND" property="domain">    
                domain = trim(#domain#)
            </isNotEmpty>              
        </dynamic> 
        order by ORDER_KEY         
	</select>
    
    <select id="secResourceCategory_listResourceCategoryOfTopLevel" resultMap="SecResourceCategoryResult">
      	SELECT *
		FROM   SEC_RESOURCE_CATEGORY
        WHERE  PARENT_ID IS NULL
        AND CATEGORY_KEY not like '%exclude%'
        ORDER BY ORDER_KEY
    </select>

    <select id="secResourceCategory_listResourceCategoryByParentId" resultMap="SecResourceCategoryResult" parameterClass="java.lang.String">
      	SELECT *
		FROM   SEC_RESOURCE_CATEGORY
        WHERE  PARENT_ID = #parentId# 
         AND CATEGORY_KEY not like '%exclude%'
        ORDER BY ORDER_KEY
    </select>


  	<delete id="secResourceCategory_deleteResourceCategoryByMetadataId" parameterClass="java.lang.String">
  		<![CDATA[
  		DELETE 	FROM SEC_RESOURCE_CATEGORY
  		WHERE	METADATA_ID = #value#
  		]]>
  	</delete>
  	
  	<delete id="secResourceCategory_deleteResourceCategoryById" parameterClass="java.lang.String">
  		<![CDATA[
  		DELETE 	FROM SEC_RESOURCE_CATEGORY
  		WHERE	category_id = #value#
  		]]>
  	</delete>
  	
  	<update id="secResourceCategory_updateResourceCategory" parameterClass="SecResourceCategory">
        <![CDATA[
    UPDATE SEC_RESOURCE_CATEGORY 
    SET
            CATEGORY_ID = #categoryId#,
            CATEGORY_NAME = #categoryName#,
            CATEGORY_DESC = #categoryDesc#,
            PARENT_ID = #parentId#,
            CATEGORY_KEY = #categoryKey#,
            METADATA_ID = #metadataId#,
            ORDER_KEY = #orderKey#,
            domain = #domain#            
    WHERE CATEGORY_ID = #categoryId#
]]>
    </update>

    <select id="secResourceCategory_findResourceCategory" resultMap="SecResourceCategoryResult" parameterClass="java.lang.String">
        SELECT *
        FROM SEC_RESOURCE_CATEGORY
        WHERE CATEGORY_ID = #resourceCategoryId#
    </select>

    <select id="secResourceCategory_findResourceCategoryByKey" resultMap="SecResourceCategoryResult" parameterClass="java.lang.String">
        SELECT *
        FROM SEC_RESOURCE_CATEGORY
        WHERE CATEGORY_KEY = #resourceCategoryKey#
    </select>
    
  	<select id="secResourceCategory_listResourceCategoryStartWith" resultMap="SecResourceCategoryResult" parameterClass="SecResourceCategory">
		SELECT * FROM   SEC_RESOURCE_CATEGORY  
		<dynamic prepend="WHERE">  
			 <isNotEmpty prepend="AND" property="domain">    
                domain = trim(#domain#)
            </isNotEmpty>
             <isNotEmpty prepend="AND" property="dynamicFields.domains">    
                domain in ($dynamicFields.domains$) 
            </isNotEmpty>      
		</dynamic> 
   		start with parent_id is null connect by prior category_id=parent_id
   </select>
   
</sqlMap>