<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wml.springboot.mapper.SecResourcesMapper">
	<!-- 实体映射 -->
	<resultMap type="com.wml.springboot.entity.SecResources" id="BaseResultMap">
		<!-- 资源ID -->
		<id column="RESOURCE_ID" property="resourceId" jdbcType="BIGINT"/>
		<!-- 资源外码 -->
		<result column="RESOURCE_KEY" property="resourceKey" jdbcType="VARCHAR"/>
		<!-- 资源名称 -->
		<result column="RESOURCE_NAME" property="resourceName" jdbcType="VARCHAR"/>
		<!-- 资源描述 -->
		<result column="RESOURCE_DESC" property="resourceDesc" jdbcType="VARCHAR"/>
		<!-- 资源分类ID -->
		<result column="CATEGORY_ID" property="categoryId" jdbcType="BIGINT"/>
		<!-- 鉴权类型(AUTH：鉴权，UNAUTH：不鉴权，LOGIN_AUTH：登录鉴权) -->
		<result column="AUTH_TYPE" property="authType" jdbcType="VARCHAR"/>
		<!-- 元数据ID -->
		<result column="METADATA_ID" property="metadataId" jdbcType="VARCHAR"/>
		<!-- 管理域：SP、ADMIN -->
		<result column="DOMAIN" property="domain" jdbcType="VARCHAR"/>
		<!-- 资源的顺序 -->
		<result column="ORDER_KEY" property="orderKey" jdbcType="INTEGER"/>

		<association property="secResourceCategory"
					 javaType="com.wml.springboot.entity.SecResourceCategory"
					 column="CATEGORY_ID"
					 select="com.wml.springboot.mapper.SecResourceCategoryMapper.selectByPrimaryKey">
		</association>
	</resultMap>

	<!-- 字段属性 -->
	<sql id="Base_Column_List">
		RESOURCE_ID,  RESOURCE_KEY,  RESOURCE_NAME,  RESOURCE_DESC,  CATEGORY_ID,  AUTH_TYPE,
		METADATA_ID,  DOMAIN,  ORDER_KEY
	</sql>

	<!-- 分页列表查询  -->
	<select id="getPageList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sec_resources
		where 1 = 1
		order by RESOURCE_ID desc
	</select>

	<!-- 根据主键RESOURCE_ID查询对应数据  -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Long">
		select
		<include refid="Base_Column_List" />
		from sec_resources
		where RESOURCE_ID = #{resourceId, jdbcType=BIGINT}
	</select>

	<!-- 查询sec_resources对象的数据集合 -->
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sec_resources
	</select>

	<!-- 根据主键 RESOURCE_ID删除对应数据 -->
	<delete id="deleteByPrimaryKey" parameterType="Long">
		delete from sec_resources
		where RESOURCE_ID = #{resourceId, jdbcType=BIGINT}
	</delete>

	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="java.util.Map">
		delete from sec_resources where 1 = 1
		<if test="list != null">
			and RESOURCE_ID in
			<foreach item="tag" index="index" collection="list" open="(" separator="," close=")">
				#{tag}
			</foreach>
		</if>
	</delete>

	<!-- 新增 -->
	<insert id="insert" parameterType="com.wml.springboot.entity.SecResources" useGeneratedKeys="true" keyProperty="resourceId">
		insert into sec_resources(RESOURCE_ID, RESOURCE_KEY, RESOURCE_NAME, RESOURCE_DESC,
		CATEGORY_ID, AUTH_TYPE, METADATA_ID,
		DOMAIN, ORDER_KEY )
		values (#{resourceId, jdbcType=BIGINT}, #{resourceKey, jdbcType=VARCHAR}, #{resourceName, jdbcType=VARCHAR}, #{resourceDesc, jdbcType=VARCHAR},
		#{categoryId, jdbcType=BIGINT}, #{authType, jdbcType=VARCHAR}, #{metadataId, jdbcType=VARCHAR},
		#{domain, jdbcType=VARCHAR}, #{orderKey, jdbcType=INTEGER} )
	</insert>

	<!-- 新增 -->
	<insert id="insertSelective" parameterType="com.wml.springboot.entity.SecResources" useGeneratedKeys="true" keyProperty="resourceId">
		insert into sec_resources
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="resourceId != null" >
				RESOURCE_ID,
			</if>
			<if test="resourceKey != null" >
				RESOURCE_KEY,
			</if>
			<if test="resourceName != null" >
				RESOURCE_NAME,
			</if>
			<if test="resourceDesc != null" >
				RESOURCE_DESC,
			</if>
			<if test="categoryId != null" >
				CATEGORY_ID,
			</if>
			<if test="authType != null" >
				AUTH_TYPE,
			</if>
			<if test="metadataId != null" >
				METADATA_ID,
			</if>
			<if test="domain != null" >
				DOMAIN,
			</if>
			<if test="orderKey != null" >
				ORDER_KEY,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="resourceId != null" >
				#{resourceId, jdbcType=BIGINT},
			</if>
			<if test="resourceKey != null" >
				#{resourceKey, jdbcType=VARCHAR},
			</if>
			<if test="resourceName != null" >
				#{resourceName, jdbcType=VARCHAR},
			</if>
			<if test="resourceDesc != null" >
				#{resourceDesc, jdbcType=VARCHAR},
			</if>
			<if test="categoryId != null" >
				#{categoryId, jdbcType=BIGINT},
			</if>
			<if test="authType != null" >
				#{authType, jdbcType=VARCHAR},
			</if>
			<if test="metadataId != null" >
				#{metadataId, jdbcType=VARCHAR},
			</if>
			<if test="domain != null" >
				#{domain, jdbcType=VARCHAR},
			</if>
			<if test="orderKey != null" >
				#{orderKey, jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<!-- 修改 -->
	<update id="updateByPrimaryKey" parameterType="com.wml.springboot.entity.SecResources">
		update sec_resources set
		RESOURCE_ID = #{resourceId, jdbcType=BIGINT},
		RESOURCE_KEY = #{resourceKey, jdbcType=VARCHAR},
		RESOURCE_NAME = #{resourceName, jdbcType=VARCHAR},
		RESOURCE_DESC = #{resourceDesc, jdbcType=VARCHAR},
		CATEGORY_ID = #{categoryId, jdbcType=BIGINT},
		AUTH_TYPE = #{authType, jdbcType=VARCHAR},
		METADATA_ID = #{metadataId, jdbcType=VARCHAR},
		DOMAIN = #{domain, jdbcType=VARCHAR},
		ORDER_KEY = #{orderKey, jdbcType=INTEGER}
		where RESOURCE_ID = #{resourceId, jdbcType=BIGINT}
	</update>

	<!-- 修改 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.wml.springboot.entity.SecResources">
		update sec_resources
		<set>
			<if test="resourceId != null" >
				RESOURCE_ID = #{resourceId, jdbcType=BIGINT},
			</if>
			<if test="resourceKey != null" >
				RESOURCE_KEY = #{resourceKey, jdbcType=VARCHAR},
			</if>
			<if test="resourceName != null" >
				RESOURCE_NAME = #{resourceName, jdbcType=VARCHAR},
			</if>
			<if test="resourceDesc != null" >
				RESOURCE_DESC = #{resourceDesc, jdbcType=VARCHAR},
			</if>
			<if test="categoryId != null" >
				CATEGORY_ID = #{categoryId, jdbcType=BIGINT},
			</if>
			<if test="authType != null" >
				AUTH_TYPE = #{authType, jdbcType=VARCHAR},
			</if>
			<if test="metadataId != null" >
				METADATA_ID = #{metadataId, jdbcType=VARCHAR},
			</if>
			<if test="domain != null" >
				DOMAIN = #{domain, jdbcType=VARCHAR},
			</if>
			<if test="orderKey != null" >
				ORDER_KEY = #{orderKey, jdbcType=INTEGER},
			</if>
		</set>
		where RESOURCE_ID = #{resourceId, jdbcType=BIGINT}
	</update>

</mapper>